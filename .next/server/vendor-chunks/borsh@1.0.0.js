"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/borsh@1.0.0";
exports.ids = ["vendor-chunks/borsh@1.0.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/buffer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/buffer.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.DecodeBuffer = exports.EncodeBuffer = void 0;\nvar EncodeBuffer = /** @class */ (function () {\n    function EncodeBuffer() {\n        this.offset = 0;\n        this.buffer_size = 256;\n        this.buffer = new ArrayBuffer(this.buffer_size);\n        this.view = new DataView(this.buffer);\n    }\n    EncodeBuffer.prototype.resize_if_necessary = function (needed_space) {\n        if (this.buffer_size - this.offset < needed_space) {\n            this.buffer_size = Math.max(this.buffer_size * 2, this.buffer_size + needed_space);\n            var new_buffer = new ArrayBuffer(this.buffer_size);\n            new Uint8Array(new_buffer).set(new Uint8Array(this.buffer));\n            this.buffer = new_buffer;\n            this.view = new DataView(new_buffer);\n        }\n    };\n    EncodeBuffer.prototype.get_used_buffer = function () {\n        return new Uint8Array(this.buffer).slice(0, this.offset);\n    };\n    EncodeBuffer.prototype.store_value = function (value, type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.resize_if_necessary(size);\n        var toCall = type[0] === 'f' ? \"setFloat\".concat(bSize) : type[0] === 'i' ? \"setInt\".concat(bSize) : \"setUint\".concat(bSize);\n        this.view[toCall](this.offset, value, true);\n        this.offset += size;\n    };\n    EncodeBuffer.prototype.store_bytes = function (from) {\n        this.resize_if_necessary(from.length);\n        new Uint8Array(this.buffer).set(new Uint8Array(from), this.offset);\n        this.offset += from.length;\n    };\n    return EncodeBuffer;\n}());\nexports.EncodeBuffer = EncodeBuffer;\nvar DecodeBuffer = /** @class */ (function () {\n    function DecodeBuffer(buf) {\n        this.offset = 0;\n        this.buffer_size = buf.length;\n        this.buffer = new ArrayBuffer(buf.length);\n        new Uint8Array(this.buffer).set(buf);\n        this.view = new DataView(this.buffer);\n    }\n    DecodeBuffer.prototype.assert_enough_buffer = function (size) {\n        if (this.offset + size > this.buffer.byteLength) {\n            throw new Error('Error in schema, the buffer is smaller than expected');\n        }\n    };\n    DecodeBuffer.prototype.consume_value = function (type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.assert_enough_buffer(size);\n        var toCall = type[0] === 'f' ? \"getFloat\".concat(bSize) : type[0] === 'i' ? \"getInt\".concat(bSize) : \"getUint\".concat(bSize);\n        var ret = this.view[toCall](this.offset, true);\n        this.offset += size;\n        return ret;\n    };\n    DecodeBuffer.prototype.consume_bytes = function (size) {\n        this.assert_enough_buffer(size);\n        var ret = this.buffer.slice(this.offset, this.offset + size);\n        this.offset += size;\n        return ret;\n    };\n    return DecodeBuffer;\n}());\nexports.DecodeBuffer = DecodeBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYm9yc2hAMS4wLjAvbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvYnVmZmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCO0FBQ2xCLG9CQUFvQixHQUFHLG9CQUFvQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy8ucG5wbS9ib3JzaEAxLjAuMC9ub2RlX21vZHVsZXMvYm9yc2gvbGliL2Nqcy9idWZmZXIuanM/MGEyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLkRlY29kZUJ1ZmZlciA9IGV4cG9ydHMuRW5jb2RlQnVmZmVyID0gdm9pZCAwO1xudmFyIEVuY29kZUJ1ZmZlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBFbmNvZGVCdWZmZXIoKSB7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gMDtcbiAgICAgICAgdGhpcy5idWZmZXJfc2l6ZSA9IDI1NjtcbiAgICAgICAgdGhpcy5idWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIodGhpcy5idWZmZXJfc2l6ZSk7XG4gICAgICAgIHRoaXMudmlldyA9IG5ldyBEYXRhVmlldyh0aGlzLmJ1ZmZlcik7XG4gICAgfVxuICAgIEVuY29kZUJ1ZmZlci5wcm90b3R5cGUucmVzaXplX2lmX25lY2Vzc2FyeSA9IGZ1bmN0aW9uIChuZWVkZWRfc3BhY2UpIHtcbiAgICAgICAgaWYgKHRoaXMuYnVmZmVyX3NpemUgLSB0aGlzLm9mZnNldCA8IG5lZWRlZF9zcGFjZSkge1xuICAgICAgICAgICAgdGhpcy5idWZmZXJfc2l6ZSA9IE1hdGgubWF4KHRoaXMuYnVmZmVyX3NpemUgKiAyLCB0aGlzLmJ1ZmZlcl9zaXplICsgbmVlZGVkX3NwYWNlKTtcbiAgICAgICAgICAgIHZhciBuZXdfYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKHRoaXMuYnVmZmVyX3NpemUpO1xuICAgICAgICAgICAgbmV3IFVpbnQ4QXJyYXkobmV3X2J1ZmZlcikuc2V0KG5ldyBVaW50OEFycmF5KHRoaXMuYnVmZmVyKSk7XG4gICAgICAgICAgICB0aGlzLmJ1ZmZlciA9IG5ld19idWZmZXI7XG4gICAgICAgICAgICB0aGlzLnZpZXcgPSBuZXcgRGF0YVZpZXcobmV3X2J1ZmZlcik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIEVuY29kZUJ1ZmZlci5wcm90b3R5cGUuZ2V0X3VzZWRfYnVmZmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkodGhpcy5idWZmZXIpLnNsaWNlKDAsIHRoaXMub2Zmc2V0KTtcbiAgICB9O1xuICAgIEVuY29kZUJ1ZmZlci5wcm90b3R5cGUuc3RvcmVfdmFsdWUgPSBmdW5jdGlvbiAodmFsdWUsIHR5cGUpIHtcbiAgICAgICAgdmFyIGJTaXplID0gdHlwZS5zdWJzdHJpbmcoMSk7XG4gICAgICAgIHZhciBzaXplID0gcGFyc2VJbnQoYlNpemUpIC8gODtcbiAgICAgICAgdGhpcy5yZXNpemVfaWZfbmVjZXNzYXJ5KHNpemUpO1xuICAgICAgICB2YXIgdG9DYWxsID0gdHlwZVswXSA9PT0gJ2YnID8gXCJzZXRGbG9hdFwiLmNvbmNhdChiU2l6ZSkgOiB0eXBlWzBdID09PSAnaScgPyBcInNldEludFwiLmNvbmNhdChiU2l6ZSkgOiBcInNldFVpbnRcIi5jb25jYXQoYlNpemUpO1xuICAgICAgICB0aGlzLnZpZXdbdG9DYWxsXSh0aGlzLm9mZnNldCwgdmFsdWUsIHRydWUpO1xuICAgICAgICB0aGlzLm9mZnNldCArPSBzaXplO1xuICAgIH07XG4gICAgRW5jb2RlQnVmZmVyLnByb3RvdHlwZS5zdG9yZV9ieXRlcyA9IGZ1bmN0aW9uIChmcm9tKSB7XG4gICAgICAgIHRoaXMucmVzaXplX2lmX25lY2Vzc2FyeShmcm9tLmxlbmd0aCk7XG4gICAgICAgIG5ldyBVaW50OEFycmF5KHRoaXMuYnVmZmVyKS5zZXQobmV3IFVpbnQ4QXJyYXkoZnJvbSksIHRoaXMub2Zmc2V0KTtcbiAgICAgICAgdGhpcy5vZmZzZXQgKz0gZnJvbS5sZW5ndGg7XG4gICAgfTtcbiAgICByZXR1cm4gRW5jb2RlQnVmZmVyO1xufSgpKTtcbmV4cG9ydHMuRW5jb2RlQnVmZmVyID0gRW5jb2RlQnVmZmVyO1xudmFyIERlY29kZUJ1ZmZlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEZWNvZGVCdWZmZXIoYnVmKSB7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gMDtcbiAgICAgICAgdGhpcy5idWZmZXJfc2l6ZSA9IGJ1Zi5sZW5ndGg7XG4gICAgICAgIHRoaXMuYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKGJ1Zi5sZW5ndGgpO1xuICAgICAgICBuZXcgVWludDhBcnJheSh0aGlzLmJ1ZmZlcikuc2V0KGJ1Zik7XG4gICAgICAgIHRoaXMudmlldyA9IG5ldyBEYXRhVmlldyh0aGlzLmJ1ZmZlcik7XG4gICAgfVxuICAgIERlY29kZUJ1ZmZlci5wcm90b3R5cGUuYXNzZXJ0X2Vub3VnaF9idWZmZXIgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICAgICAgICBpZiAodGhpcy5vZmZzZXQgKyBzaXplID4gdGhpcy5idWZmZXIuYnl0ZUxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFcnJvciBpbiBzY2hlbWEsIHRoZSBidWZmZXIgaXMgc21hbGxlciB0aGFuIGV4cGVjdGVkJyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIERlY29kZUJ1ZmZlci5wcm90b3R5cGUuY29uc3VtZV92YWx1ZSA9IGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgIHZhciBiU2l6ZSA9IHR5cGUuc3Vic3RyaW5nKDEpO1xuICAgICAgICB2YXIgc2l6ZSA9IHBhcnNlSW50KGJTaXplKSAvIDg7XG4gICAgICAgIHRoaXMuYXNzZXJ0X2Vub3VnaF9idWZmZXIoc2l6ZSk7XG4gICAgICAgIHZhciB0b0NhbGwgPSB0eXBlWzBdID09PSAnZicgPyBcImdldEZsb2F0XCIuY29uY2F0KGJTaXplKSA6IHR5cGVbMF0gPT09ICdpJyA/IFwiZ2V0SW50XCIuY29uY2F0KGJTaXplKSA6IFwiZ2V0VWludFwiLmNvbmNhdChiU2l6ZSk7XG4gICAgICAgIHZhciByZXQgPSB0aGlzLnZpZXdbdG9DYWxsXSh0aGlzLm9mZnNldCwgdHJ1ZSk7XG4gICAgICAgIHRoaXMub2Zmc2V0ICs9IHNpemU7XG4gICAgICAgIHJldHVybiByZXQ7XG4gICAgfTtcbiAgICBEZWNvZGVCdWZmZXIucHJvdG90eXBlLmNvbnN1bWVfYnl0ZXMgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICAgICAgICB0aGlzLmFzc2VydF9lbm91Z2hfYnVmZmVyKHNpemUpO1xuICAgICAgICB2YXIgcmV0ID0gdGhpcy5idWZmZXIuc2xpY2UodGhpcy5vZmZzZXQsIHRoaXMub2Zmc2V0ICsgc2l6ZSk7XG4gICAgICAgIHRoaXMub2Zmc2V0ICs9IHNpemU7XG4gICAgICAgIHJldHVybiByZXQ7XG4gICAgfTtcbiAgICByZXR1cm4gRGVjb2RlQnVmZmVyO1xufSgpKTtcbmV4cG9ydHMuRGVjb2RlQnVmZmVyID0gRGVjb2RlQnVmZmVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/deserialize.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/deserialize.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.BorshDeserializer = void 0;\nvar types_js_1 = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/types.js\");\nvar buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/buffer.js\");\nvar BorshDeserializer = /** @class */ (function () {\n    function BorshDeserializer(bufferArray) {\n        this.buffer = new buffer_js_1.DecodeBuffer(bufferArray);\n    }\n    BorshDeserializer.prototype.decode = function (schema) {\n        return this.decode_value(schema);\n    };\n    BorshDeserializer.prototype.decode_value = function (schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.decode_integer(schema);\n            if (schema === 'string')\n                return this.decode_string();\n            if (schema === 'bool')\n                return this.decode_boolean();\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.decode_option(schema);\n            if ('enum' in schema)\n                return this.decode_enum(schema);\n            if ('array' in schema)\n                return this.decode_array(schema);\n            if ('set' in schema)\n                return this.decode_set(schema);\n            if ('map' in schema)\n                return this.decode_map(schema);\n            if ('struct' in schema)\n                return this.decode_struct(schema);\n        }\n        throw new Error(\"Unsupported type: \".concat(schema));\n    };\n    BorshDeserializer.prototype.decode_integer = function (schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            return this.buffer.consume_value(schema);\n        }\n        return this.decode_bigint(size, schema.startsWith('i'));\n    };\n    BorshDeserializer.prototype.decode_bigint = function (size, signed) {\n        if (signed === void 0) { signed = false; }\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(this.buffer.consume_bytes(buffer_len));\n        var bits = buffer.reduceRight(function (r, x) { return r + x.toString(16).padStart(2, '0'); }, '');\n        if (signed && buffer[buffer_len - 1]) {\n            return BigInt.asIntN(size, BigInt(\"0x\".concat(bits)));\n        }\n        return BigInt(\"0x\".concat(bits));\n    };\n    BorshDeserializer.prototype.decode_string = function () {\n        var len = this.decode_integer('u32');\n        var buffer = new Uint8Array(this.buffer.consume_bytes(len));\n        return String.fromCharCode.apply(null, buffer);\n    };\n    BorshDeserializer.prototype.decode_boolean = function () {\n        return this.buffer.consume_value('u8') > 0;\n    };\n    BorshDeserializer.prototype.decode_option = function (schema) {\n        var option = this.buffer.consume_value('u8');\n        if (option === 1) {\n            return this.decode_value(schema.option);\n        }\n        if (option !== 0) {\n            throw new Error(\"Invalid option \".concat(option));\n        }\n        return null;\n    };\n    BorshDeserializer.prototype.decode_enum = function (schema) {\n        var _a;\n        var valueIndex = this.buffer.consume_value('u8');\n        if (valueIndex > schema[\"enum\"].length) {\n            throw new Error(\"Enum option \".concat(valueIndex, \" is not available\"));\n        }\n        var struct = schema[\"enum\"][valueIndex].struct;\n        var key = Object.keys(struct)[0];\n        return _a = {}, _a[key] = this.decode_value(struct[key]), _a;\n    };\n    BorshDeserializer.prototype.decode_array = function (schema) {\n        var result = [];\n        var len = schema.array.len ? schema.array.len : this.decode_integer('u32');\n        for (var i = 0; i < len; ++i) {\n            result.push(this.decode_value(schema.array.type));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_set = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Set();\n        for (var i = 0; i < len; ++i) {\n            result.add(this.decode_value(schema.set));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_map = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Map();\n        for (var i = 0; i < len; ++i) {\n            var key = this.decode_value(schema.map.key);\n            var value = this.decode_value(schema.map.value);\n            result.set(key, value);\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_struct = function (schema) {\n        var result = {};\n        for (var key in schema.struct) {\n            result[key] = this.decode_value(schema.struct[key]);\n        }\n        return result;\n    };\n    return BorshDeserializer;\n}());\nexports.BorshDeserializer = BorshDeserializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYm9yc2hAMS4wLjAvbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvZGVzZXJpYWxpemUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0I7QUFDbEIseUJBQXlCO0FBQ3pCLGlCQUFpQixtQkFBTyxDQUFDLDhGQUFZO0FBQ3JDLGtCQUFrQixtQkFBTyxDQUFDLGdHQUFhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSx3REFBd0QsNkNBQTZDO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFNBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsU0FBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixTQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QseUJBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy8ucG5wbS9ib3JzaEAxLjAuMC9ub2RlX21vZHVsZXMvYm9yc2gvbGliL2Nqcy9kZXNlcmlhbGl6ZS5qcz84NDUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuQm9yc2hEZXNlcmlhbGl6ZXIgPSB2b2lkIDA7XG52YXIgdHlwZXNfanNfMSA9IHJlcXVpcmUoXCIuL3R5cGVzLmpzXCIpO1xudmFyIGJ1ZmZlcl9qc18xID0gcmVxdWlyZShcIi4vYnVmZmVyLmpzXCIpO1xudmFyIEJvcnNoRGVzZXJpYWxpemVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJvcnNoRGVzZXJpYWxpemVyKGJ1ZmZlckFycmF5KSB7XG4gICAgICAgIHRoaXMuYnVmZmVyID0gbmV3IGJ1ZmZlcl9qc18xLkRlY29kZUJ1ZmZlcihidWZmZXJBcnJheSk7XG4gICAgfVxuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGUgPSBmdW5jdGlvbiAoc2NoZW1hKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRlY29kZV92YWx1ZShzY2hlbWEpO1xuICAgIH07XG4gICAgQm9yc2hEZXNlcmlhbGl6ZXIucHJvdG90eXBlLmRlY29kZV92YWx1ZSA9IGZ1bmN0aW9uIChzY2hlbWEpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzY2hlbWEgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBpZiAodHlwZXNfanNfMS5pbnRlZ2Vycy5pbmNsdWRlcyhzY2hlbWEpKVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY29kZV9pbnRlZ2VyKHNjaGVtYSk7XG4gICAgICAgICAgICBpZiAoc2NoZW1hID09PSAnc3RyaW5nJylcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVfc3RyaW5nKCk7XG4gICAgICAgICAgICBpZiAoc2NoZW1hID09PSAnYm9vbCcpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlX2Jvb2xlYW4oKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHNjaGVtYSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGlmICgnb3B0aW9uJyBpbiBzY2hlbWEpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlX29wdGlvbihzY2hlbWEpO1xuICAgICAgICAgICAgaWYgKCdlbnVtJyBpbiBzY2hlbWEpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlX2VudW0oc2NoZW1hKTtcbiAgICAgICAgICAgIGlmICgnYXJyYXknIGluIHNjaGVtYSlcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVfYXJyYXkoc2NoZW1hKTtcbiAgICAgICAgICAgIGlmICgnc2V0JyBpbiBzY2hlbWEpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlX3NldChzY2hlbWEpO1xuICAgICAgICAgICAgaWYgKCdtYXAnIGluIHNjaGVtYSlcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVfbWFwKHNjaGVtYSk7XG4gICAgICAgICAgICBpZiAoJ3N0cnVjdCcgaW4gc2NoZW1hKVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY29kZV9zdHJ1Y3Qoc2NoZW1hKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCB0eXBlOiBcIi5jb25jYXQoc2NoZW1hKSk7XG4gICAgfTtcbiAgICBCb3JzaERlc2VyaWFsaXplci5wcm90b3R5cGUuZGVjb2RlX2ludGVnZXIgPSBmdW5jdGlvbiAoc2NoZW1hKSB7XG4gICAgICAgIHZhciBzaXplID0gcGFyc2VJbnQoc2NoZW1hLnN1YnN0cmluZygxKSk7XG4gICAgICAgIGlmIChzaXplIDw9IDMyIHx8IHNjaGVtYSA9PSAnZjY0Jykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyLmNvbnN1bWVfdmFsdWUoc2NoZW1hKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVfYmlnaW50KHNpemUsIHNjaGVtYS5zdGFydHNXaXRoKCdpJykpO1xuICAgIH07XG4gICAgQm9yc2hEZXNlcmlhbGl6ZXIucHJvdG90eXBlLmRlY29kZV9iaWdpbnQgPSBmdW5jdGlvbiAoc2l6ZSwgc2lnbmVkKSB7XG4gICAgICAgIGlmIChzaWduZWQgPT09IHZvaWQgMCkgeyBzaWduZWQgPSBmYWxzZTsgfVxuICAgICAgICB2YXIgYnVmZmVyX2xlbiA9IHNpemUgLyA4O1xuICAgICAgICB2YXIgYnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5idWZmZXIuY29uc3VtZV9ieXRlcyhidWZmZXJfbGVuKSk7XG4gICAgICAgIHZhciBiaXRzID0gYnVmZmVyLnJlZHVjZVJpZ2h0KGZ1bmN0aW9uIChyLCB4KSB7IHJldHVybiByICsgeC50b1N0cmluZygxNikucGFkU3RhcnQoMiwgJzAnKTsgfSwgJycpO1xuICAgICAgICBpZiAoc2lnbmVkICYmIGJ1ZmZlcltidWZmZXJfbGVuIC0gMV0pIHtcbiAgICAgICAgICAgIHJldHVybiBCaWdJbnQuYXNJbnROKHNpemUsIEJpZ0ludChcIjB4XCIuY29uY2F0KGJpdHMpKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEJpZ0ludChcIjB4XCIuY29uY2F0KGJpdHMpKTtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfc3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbGVuID0gdGhpcy5kZWNvZGVfaW50ZWdlcigndTMyJyk7XG4gICAgICAgIHZhciBidWZmZXIgPSBuZXcgVWludDhBcnJheSh0aGlzLmJ1ZmZlci5jb25zdW1lX2J5dGVzKGxlbikpO1xuICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLCBidWZmZXIpO1xuICAgIH07XG4gICAgQm9yc2hEZXNlcmlhbGl6ZXIucHJvdG90eXBlLmRlY29kZV9ib29sZWFuID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5idWZmZXIuY29uc3VtZV92YWx1ZSgndTgnKSA+IDA7XG4gICAgfTtcbiAgICBCb3JzaERlc2VyaWFsaXplci5wcm90b3R5cGUuZGVjb2RlX29wdGlvbiA9IGZ1bmN0aW9uIChzY2hlbWEpIHtcbiAgICAgICAgdmFyIG9wdGlvbiA9IHRoaXMuYnVmZmVyLmNvbnN1bWVfdmFsdWUoJ3U4Jyk7XG4gICAgICAgIGlmIChvcHRpb24gPT09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY29kZV92YWx1ZShzY2hlbWEub3B0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9uICE9PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIG9wdGlvbiBcIi5jb25jYXQob3B0aW9uKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICBCb3JzaERlc2VyaWFsaXplci5wcm90b3R5cGUuZGVjb2RlX2VudW0gPSBmdW5jdGlvbiAoc2NoZW1hKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIHZhbHVlSW5kZXggPSB0aGlzLmJ1ZmZlci5jb25zdW1lX3ZhbHVlKCd1OCcpO1xuICAgICAgICBpZiAodmFsdWVJbmRleCA+IHNjaGVtYVtcImVudW1cIl0ubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFbnVtIG9wdGlvbiBcIi5jb25jYXQodmFsdWVJbmRleCwgXCIgaXMgbm90IGF2YWlsYWJsZVwiKSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHN0cnVjdCA9IHNjaGVtYVtcImVudW1cIl1bdmFsdWVJbmRleF0uc3RydWN0O1xuICAgICAgICB2YXIga2V5ID0gT2JqZWN0LmtleXMoc3RydWN0KVswXTtcbiAgICAgICAgcmV0dXJuIF9hID0ge30sIF9hW2tleV0gPSB0aGlzLmRlY29kZV92YWx1ZShzdHJ1Y3Rba2V5XSksIF9hO1xuICAgIH07XG4gICAgQm9yc2hEZXNlcmlhbGl6ZXIucHJvdG90eXBlLmRlY29kZV9hcnJheSA9IGZ1bmN0aW9uIChzY2hlbWEpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgICAgICB2YXIgbGVuID0gc2NoZW1hLmFycmF5LmxlbiA/IHNjaGVtYS5hcnJheS5sZW4gOiB0aGlzLmRlY29kZV9pbnRlZ2VyKCd1MzInKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2godGhpcy5kZWNvZGVfdmFsdWUoc2NoZW1hLmFycmF5LnR5cGUpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gICAgQm9yc2hEZXNlcmlhbGl6ZXIucHJvdG90eXBlLmRlY29kZV9zZXQgPSBmdW5jdGlvbiAoc2NoZW1hKSB7XG4gICAgICAgIHZhciBsZW4gPSB0aGlzLmRlY29kZV9pbnRlZ2VyKCd1MzInKTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IG5ldyBTZXQoKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgICAgcmVzdWx0LmFkZCh0aGlzLmRlY29kZV92YWx1ZShzY2hlbWEuc2V0KSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfbWFwID0gZnVuY3Rpb24gKHNjaGVtYSkge1xuICAgICAgICB2YXIgbGVuID0gdGhpcy5kZWNvZGVfaW50ZWdlcigndTMyJyk7XG4gICAgICAgIHZhciByZXN1bHQgPSBuZXcgTWFwKCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSB0aGlzLmRlY29kZV92YWx1ZShzY2hlbWEubWFwLmtleSk7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSB0aGlzLmRlY29kZV92YWx1ZShzY2hlbWEubWFwLnZhbHVlKTtcbiAgICAgICAgICAgIHJlc3VsdC5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfc3RydWN0ID0gZnVuY3Rpb24gKHNjaGVtYSkge1xuICAgICAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBzY2hlbWEuc3RydWN0KSB7XG4gICAgICAgICAgICByZXN1bHRba2V5XSA9IHRoaXMuZGVjb2RlX3ZhbHVlKHNjaGVtYS5zdHJ1Y3Rba2V5XSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIHJldHVybiBCb3JzaERlc2VyaWFsaXplcjtcbn0oKSk7XG5leHBvcnRzLkJvcnNoRGVzZXJpYWxpemVyID0gQm9yc2hEZXNlcmlhbGl6ZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/deserialize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/index.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.deserialize = exports.serialize = void 0;\nvar serialize_js_1 = __webpack_require__(/*! ./serialize.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/serialize.js\");\nvar deserialize_js_1 = __webpack_require__(/*! ./deserialize.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/deserialize.js\");\nvar utils = __importStar(__webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/utils.js\"));\nfunction serialize(schema, value, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var serializer = new serialize_js_1.BorshSerializer(validate);\n    return serializer.encode(value, schema);\n}\nexports.serialize = serialize;\nfunction deserialize(schema, buffer, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var deserializer = new deserialize_js_1.BorshDeserializer(buffer);\n    return deserializer.decode(schema);\n}\nexports.deserialize = deserialize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYm9yc2hAMS4wLjAvbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLG1CQUFtQixHQUFHLGlCQUFpQjtBQUN2QyxxQkFBcUIsbUJBQU8sQ0FBQyxzR0FBZ0I7QUFDN0MsdUJBQXVCLG1CQUFPLENBQUMsMEdBQWtCO0FBQ2pELHlCQUF5QixtQkFBTyxDQUFDLDhGQUFZO0FBQzdDO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvLnBucG0vYm9yc2hAMS4wLjAvbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvaW5kZXguanM/ZDgxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVzZXJpYWxpemUgPSBleHBvcnRzLnNlcmlhbGl6ZSA9IHZvaWQgMDtcbnZhciBzZXJpYWxpemVfanNfMSA9IHJlcXVpcmUoXCIuL3NlcmlhbGl6ZS5qc1wiKTtcbnZhciBkZXNlcmlhbGl6ZV9qc18xID0gcmVxdWlyZShcIi4vZGVzZXJpYWxpemUuanNcIik7XG52YXIgdXRpbHMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHMuanNcIikpO1xuZnVuY3Rpb24gc2VyaWFsaXplKHNjaGVtYSwgdmFsdWUsIHZhbGlkYXRlKSB7XG4gICAgaWYgKHZhbGlkYXRlID09PSB2b2lkIDApIHsgdmFsaWRhdGUgPSB0cnVlOyB9XG4gICAgaWYgKHZhbGlkYXRlKVxuICAgICAgICB1dGlscy52YWxpZGF0ZV9zY2hlbWEoc2NoZW1hKTtcbiAgICB2YXIgc2VyaWFsaXplciA9IG5ldyBzZXJpYWxpemVfanNfMS5Cb3JzaFNlcmlhbGl6ZXIodmFsaWRhdGUpO1xuICAgIHJldHVybiBzZXJpYWxpemVyLmVuY29kZSh2YWx1ZSwgc2NoZW1hKTtcbn1cbmV4cG9ydHMuc2VyaWFsaXplID0gc2VyaWFsaXplO1xuZnVuY3Rpb24gZGVzZXJpYWxpemUoc2NoZW1hLCBidWZmZXIsIHZhbGlkYXRlKSB7XG4gICAgaWYgKHZhbGlkYXRlID09PSB2b2lkIDApIHsgdmFsaWRhdGUgPSB0cnVlOyB9XG4gICAgaWYgKHZhbGlkYXRlKVxuICAgICAgICB1dGlscy52YWxpZGF0ZV9zY2hlbWEoc2NoZW1hKTtcbiAgICB2YXIgZGVzZXJpYWxpemVyID0gbmV3IGRlc2VyaWFsaXplX2pzXzEuQm9yc2hEZXNlcmlhbGl6ZXIoYnVmZmVyKTtcbiAgICByZXR1cm4gZGVzZXJpYWxpemVyLmRlY29kZShzY2hlbWEpO1xufVxuZXhwb3J0cy5kZXNlcmlhbGl6ZSA9IGRlc2VyaWFsaXplO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/serialize.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/serialize.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.BorshSerializer = void 0;\nvar types_js_1 = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/types.js\");\nvar buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/buffer.js\");\nvar utils = __importStar(__webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/utils.js\"));\nvar BorshSerializer = /** @class */ (function () {\n    function BorshSerializer(checkTypes) {\n        this.encoded = new buffer_js_1.EncodeBuffer();\n        this.fieldPath = ['value'];\n        this.checkTypes = checkTypes;\n    }\n    BorshSerializer.prototype.encode = function (value, schema) {\n        this.encode_value(value, schema);\n        return this.encoded.get_used_buffer();\n    };\n    BorshSerializer.prototype.encode_value = function (value, schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.encode_integer(value, schema);\n            if (schema === 'string')\n                return this.encode_string(value);\n            if (schema === 'bool')\n                return this.encode_boolean(value);\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.encode_option(value, schema);\n            if ('enum' in schema)\n                return this.encode_enum(value, schema);\n            if ('array' in schema)\n                return this.encode_array(value, schema);\n            if ('set' in schema)\n                return this.encode_set(value, schema);\n            if ('map' in schema)\n                return this.encode_map(value, schema);\n            if ('struct' in schema)\n                return this.encode_struct(value, schema);\n        }\n    };\n    BorshSerializer.prototype.encode_integer = function (value, schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            this.checkTypes && utils.expect_type(value, 'number', this.fieldPath);\n            this.encoded.store_value(value, schema);\n        }\n        else {\n            this.checkTypes && utils.expect_bigint(value, this.fieldPath);\n            this.encode_bigint(BigInt(value), size);\n        }\n    };\n    BorshSerializer.prototype.encode_bigint = function (value, size) {\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(buffer_len);\n        for (var i = 0; i < buffer_len; i++) {\n            buffer[i] = Number(value & BigInt(0xff));\n            value = value >> BigInt(8);\n        }\n        this.encoded.store_bytes(new Uint8Array(buffer));\n    };\n    BorshSerializer.prototype.encode_string = function (value) {\n        this.checkTypes && utils.expect_type(value, 'string', this.fieldPath);\n        var _value = value;\n        // 4 bytes for length\n        this.encoded.store_value(_value.length, 'u32');\n        // string bytes\n        for (var i = 0; i < _value.length; i++) {\n            this.encoded.store_value(_value.charCodeAt(i), 'u8');\n        }\n    };\n    BorshSerializer.prototype.encode_boolean = function (value) {\n        this.checkTypes && utils.expect_type(value, 'boolean', this.fieldPath);\n        this.encoded.store_value(value ? 1 : 0, 'u8');\n    };\n    BorshSerializer.prototype.encode_option = function (value, schema) {\n        if (value === null || value === undefined) {\n            this.encoded.store_value(0, 'u8');\n        }\n        else {\n            this.encoded.store_value(1, 'u8');\n            this.encode_value(value, schema.option);\n        }\n    };\n    BorshSerializer.prototype.encode_enum = function (value, schema) {\n        this.checkTypes && utils.expect_enum(value, this.fieldPath);\n        var valueKey = Object.keys(value)[0];\n        for (var i = 0; i < schema[\"enum\"].length; i++) {\n            var valueSchema = schema[\"enum\"][i];\n            if (valueKey === Object.keys(valueSchema.struct)[0]) {\n                this.encoded.store_value(i, 'u8');\n                return this.encode_struct(value, valueSchema);\n            }\n        }\n        throw new Error(\"Enum key (\".concat(valueKey, \") not found in enum schema: \").concat(JSON.stringify(schema), \" at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_array = function (value, schema) {\n        if (utils.isArrayLike(value))\n            return this.encode_arraylike(value, schema);\n        if (value instanceof ArrayBuffer)\n            return this.encode_buffer(value, schema);\n        throw new Error(\"Expected Array-like not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_arraylike = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.length, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.length, 'u32');\n        }\n        // array values\n        for (var i = 0; i < value.length; i++) {\n            this.encode_value(value[i], schema.array.type);\n        }\n    };\n    BorshSerializer.prototype.encode_buffer = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.byteLength, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.byteLength, 'u32');\n        }\n        // array values\n        this.encoded.store_bytes(new Uint8Array(value));\n    };\n    BorshSerializer.prototype.encode_set = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isSet = value instanceof Set;\n        var values = isSet ? Array.from(value.values()) : Object.values(value);\n        // 4 bytes for length\n        this.encoded.store_value(values.length, 'u32');\n        // set values\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value_1 = values_1[_i];\n            this.encode_value(value_1, schema.set);\n        }\n    };\n    BorshSerializer.prototype.encode_map = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isMap = value instanceof Map;\n        var keys = isMap ? Array.from(value.keys()) : Object.keys(value);\n        // 4 bytes for length\n        this.encoded.store_value(keys.length, 'u32');\n        // store key/values\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this.encode_value(key, schema.map.key);\n            this.encode_value(isMap ? value.get(key) : value[key], schema.map.value);\n        }\n    };\n    BorshSerializer.prototype.encode_struct = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        for (var _i = 0, _a = Object.keys(schema.struct); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.fieldPath.push(key);\n            this.encode_value(value[key], schema.struct[key]);\n            this.fieldPath.pop();\n        }\n    };\n    return BorshSerializer;\n}());\nexports.BorshSerializer = BorshSerializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/serialize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/types.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/types.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.integers = void 0;\nexports.integers = ['u8', 'u16', 'u32', 'u64', 'u128', 'i8', 'i16', 'i32', 'i64', 'i128', 'f32', 'f64'];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYm9yc2hAMS4wLjAvbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0I7QUFDbEIsZ0JBQWdCO0FBQ2hCLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hlbGxvLW5lYXIvLi9ub2RlX21vZHVsZXMvLnBucG0vYm9yc2hAMS4wLjAvbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvdHlwZXMuanM/ZDdlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmludGVnZXJzID0gdm9pZCAwO1xuZXhwb3J0cy5pbnRlZ2VycyA9IFsndTgnLCAndTE2JywgJ3UzMicsICd1NjQnLCAndTEyOCcsICdpOCcsICdpMTYnLCAnaTMyJywgJ2k2NCcsICdpMTI4JywgJ2YzMicsICdmNjQnXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/utils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/utils.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.validate_schema = exports.ErrorSchema = exports.expect_enum = exports.expect_same_size = exports.expect_bigint = exports.expect_type = exports.isArrayLike = void 0;\nvar types_js_1 = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/types.js\");\nfunction isArrayLike(value) {\n    // source: https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\n    return (Array.isArray(value) ||\n        (!!value &&\n            typeof value === 'object' &&\n            'length' in value &&\n            typeof (value.length) === 'number' &&\n            (value.length === 0 ||\n                (value.length > 0 &&\n                    (value.length - 1) in value))));\n}\nexports.isArrayLike = isArrayLike;\nfunction expect_type(value, type, fieldPath) {\n    if (typeof (value) !== type) {\n        throw new Error(\"Expected \".concat(type, \" not \").concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_type = expect_type;\nfunction expect_bigint(value, fieldPath) {\n    var basicType = ['number', 'string', 'bigint', 'boolean'].includes(typeof (value));\n    var strObject = typeof (value) === 'object' && value !== null && 'toString' in value;\n    if (!basicType && !strObject) {\n        throw new Error(\"Expected bigint, number, boolean or string not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_bigint = expect_bigint;\nfunction expect_same_size(length, expected, fieldPath) {\n    if (length !== expected) {\n        throw new Error(\"Array length \".concat(length, \" does not match schema length \").concat(expected, \" at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_same_size = expect_same_size;\nfunction expect_enum(value, fieldPath) {\n    if (typeof (value) !== 'object' || value === null) {\n        throw new Error(\"Expected object not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_enum = expect_enum;\n// Validate Schema\nvar VALID_STRING_TYPES = types_js_1.integers.concat(['bool', 'string']);\nvar VALID_OBJECT_KEYS = ['option', 'enum', 'array', 'set', 'map', 'struct'];\nvar ErrorSchema = /** @class */ (function (_super) {\n    __extends(ErrorSchema, _super);\n    function ErrorSchema(schema, expected) {\n        var message = \"Invalid schema: \".concat(JSON.stringify(schema), \" expected \").concat(expected);\n        return _super.call(this, message) || this;\n    }\n    return ErrorSchema;\n}(Error));\nexports.ErrorSchema = ErrorSchema;\nfunction validate_schema(schema) {\n    if (typeof (schema) === 'string' && VALID_STRING_TYPES.includes(schema)) {\n        return;\n    }\n    if (schema && typeof (schema) === 'object') {\n        var keys = Object.keys(schema);\n        if (keys.length === 1 && VALID_OBJECT_KEYS.includes(keys[0])) {\n            var key = keys[0];\n            if (key === 'option')\n                return validate_schema(schema[key]);\n            if (key === 'enum')\n                return validate_enum_schema(schema[key]);\n            if (key === 'array')\n                return validate_array_schema(schema[key]);\n            if (key === 'set')\n                return validate_schema(schema[key]);\n            if (key === 'map')\n                return validate_map_schema(schema[key]);\n            if (key === 'struct')\n                return validate_struct_schema(schema[key]);\n        }\n    }\n    throw new ErrorSchema(schema, VALID_OBJECT_KEYS.join(', ') + ' or ' + VALID_STRING_TYPES.join(', '));\n}\nexports.validate_schema = validate_schema;\nfunction validate_enum_schema(schema) {\n    if (!Array.isArray(schema))\n        throw new ErrorSchema(schema, 'Array');\n    for (var _i = 0, schema_1 = schema; _i < schema_1.length; _i++) {\n        var sch = schema_1[_i];\n        if (typeof sch !== 'object' || !('struct' in sch)) {\n            throw new Error('Missing \"struct\" key in enum schema');\n        }\n        if (typeof sch.struct !== 'object' || Object.keys(sch.struct).length !== 1) {\n            throw new Error('The \"struct\" in each enum must have a single key');\n        }\n        validate_schema({ struct: sch.struct });\n    }\n}\nfunction validate_array_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, '{ type, len? }');\n    if (schema.len && typeof schema.len !== 'number') {\n        throw new Error(\"Invalid schema: \".concat(schema));\n    }\n    if ('type' in schema)\n        return validate_schema(schema.type);\n    throw new ErrorSchema(schema, '{ type, len? }');\n}\nfunction validate_map_schema(schema) {\n    if (typeof schema === 'object' && 'key' in schema && 'value' in schema) {\n        validate_schema(schema.key);\n        validate_schema(schema.value);\n    }\n    else {\n        throw new ErrorSchema(schema, '{ key, value }');\n    }\n}\nfunction validate_struct_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, 'object');\n    for (var key in schema) {\n        validate_schema(schema[key]);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/borsh@1.0.0/node_modules/borsh/lib/cjs/utils.js\n");

/***/ })

};
;